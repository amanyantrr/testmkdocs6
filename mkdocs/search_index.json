{
    "docs": [
        {
            "location": "/", 
            "text": "VIBE as an Access Point\n\n\n\n\nConnect VIBE2 to your PC client via ethernet interface.\n\n\n\n\nCheck whether eth0 (ethernet connection) is up or not using the command:\n\n\n  ifconfig\n\n  eth0      Link encap:Ethernet  HWaddr 1c:ba:8c:f1:a2:40                         \n            inet addr:192.168.1.151  Bcast:192.168.1.255  Mask:255.255.255.0      \n            inet6 addr: fe80::1eba:8cff:fef1:a240/64 Scope:Link                   \n            UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1                    \n            RX packets:2500 errors:0 dropped:180 overruns:0 frame:0               \n            TX packets:1049 errors:0 dropped:0 overruns:0 carrier:0               \n            collisions:0 txqueuelen:1000                                          \n            RX bytes:1494880 (1.4 MiB)  TX bytes:154334 (150.7 KiB)               \n            Interrupt:40\n\n\n\n\n\n\n\nNow we will set our VIBE as an access point (AP).\n\n\n\n\n\n\nBefore that let us understand what AP needs to be capable of to be AP:\n\n\n\n\nInform devices about AP existence (Broadcast SSID) or at least allow         clients to connect.\n\n\nAuthenticate client.\n\n\nAssign IP to the client devices.\n\n\nRoute packages to the \u201coutput\u201d network and the other way around.\n\n\n\n\n\n\n\n\nIn order to handle all these,VIBE needs the following tools\n\n\n\n\nhostapd \u2013 Host AccessPoint Daemon \n\n\nwpa-supplicant \u2013 tool responsible for WPA authorization\n\n\nisc-dhcp-server \n\n\nip-tables \n\n\n\n\n\n\n\n\nLet us now install these tools\n\n\n      sudo apt-get update\n\n      sudo apt-get -y install hostapd isc-dhcp-server iptables wpasupplicant\n\n\n\n\n\nNow let us set the AP configuration by creating the file /etc/hostapd/hostapd.conf and adding the following content\n interface=wlan0    #wlan0 will be working in AP mode\n ssid=Your_AP_SSID  #your AP SSID\n channel=1          #WiFi channel used by AP\n # WPA and WPA2 configuration\n macaddr_acl=0      #indicates that you do not use MAC address allow/deny list\n auth_algs=1        #indicates algorithm specified by IEEE 802.11\n ignore_broadcast_ssid=0 #AP will broadcast SSID\n\n #WPA settings\n wpa=2              #WPA algorithm used (WPA2 in this case)\n wpa_passphrase=my_secret_pass #AP password\n wpa_key_mgmt=WPA-PSK #WPA key mangement type\n wpa_pairwise=TKIP #encription algorithm\n rsn_pairwise=CCMP #encription algorithm\n\n #Hardware configuration\n driver=rtl871xdrv     #type of driver to be used (in may be different depending on your WiFi dongle chipset)\n                       #in majority of cases it will be driver=nl80211\n ieee80211n=1          #Whether IEEE 802.11n (HT) is enabled \n device_name=RTL8192CU #User-friendly description of device (optional)\n manufacturer=Realtek  #Manufacturer name (optional)\n hw_mode=g             #WPS RF Bands (a = 5G, b = 2.4G, g = 2.4G, ag = dual band)\n\n\n\n\n\n\n\nNote:\n If you are copying the above content ,don't forget to remove the comments from the file.\n\n\n\n\n\n\nNow we need to set up /etc/hostapd/hostapd.conf as the configuration file. We do it in /etc/default/hostapd. Put the following line there:\n\n\n DAEMON_CONF=\"/etc/hostapd/hostapd.conf\"\n\n\n\n\n\n\n\nNow let\u2019s configure the network settings for clients connecting to AP. We do it in /etc/dhcp/dhcpd.conf\n\n\n  ddns-update-style none;   #DDNS disabled\n  default-lease-time 84600; #IP lease time valid for a day\n  max-lease-time 84600;     #IP lease time valid for a day\n  subnet 192.134.3.0 netmask 255.255.255.0 { #AP Subnet defintion\n  range 192.134.3.2 192.134.3.9  ;         #Range of IP addresses available for clients\n  option domain-name-servers 192.168.1.1 ; #your DNS IP (in my case, my router is workign as DNS)\n  option domain-name \"home\";     #optional domain name\n  option routers  192.134.3.1  ; #your client's gateway / router IP\n  }\n\n\n\n\n\n\n\nAgain we need to make sure that DHCP server uses this configuration. In /etc/default/isc-dhcp-server put the following lines:\n\n\n DHCPD_CONF=\"/etc/dhcp/dhcpd.conf\"\n INTERFACES=\"wlan0\"\n\n\n\n\n\n\n\nNow configure wlan0 for static IP adress (the same as router IP in dhcpd.conf file)\n\n\n\n\n\n\nWe do it in /etc/network/interfaces:\n\n\n auto wlan0\n allow-hotplug wlan0\n iface wlan0 inet static\n      address 192.134.3.1\n      netmask 255.255.255.0\n up iptables-restore \n /etc/iptables.ipv4.nat\n\n\n\n\n\n\n\nThe last line will set routing rules after restart.\n\n\n\n\nLet\u2019s turn on packet forwarding in /etc/sysctl.conf by making sure that line \n net.ipv4.ip_forward=1\n\n\n\n\n\n\n\nis uncommented or added.\n\n\n\n\nWe will configure routing now by executing (assuming eth0 is your WAN interface):\nsudo iptables -t nat -A POSTROUTING -o eth0 -j MASQUERADE\n\nsudo iptables -A FORWARD -i eth0 -o wlan0 -m state --state RELATED,ESTABLISHED -j ACCEPT\n\nsudo iptables -A FORWARD -i wlan0 -o eth0 -j ACCEPT\n\n\n\n\n\n\n\nand lets save these setting in a file:\n\n\n    sh -c \"iptables-save \n /etc/iptables.ipv4.nat\"\n\n\n\n\n\nIf you are using RTL8188CUS chipset you had to replace original hostapd with the one prepared for this chipset. \nwget \"http://raspberry-at-home.com/files/hostapd.gz\"\nsudo gzip -d hostapd.gz\nsudo chmod 755 hostapd\nsudo cp hostapd /usr/sbin/\n\n\n\n\n\n\n\n\n\n\n\n\n\nTo check the mode, you can use the command iwconfig\n\n\nroot@Yantrr:~# iwconfig                                                         \nwlan0     IEEE 802.11bgn  ESSID:\"VIBE2_AP\"  Nickname:\"\nWIFI@REALTEK\n\"           \n          Mode:Master  Frequency:2.412 GHz  Access Point: 00:1D:43:C0:0C:F0     \n          Sensitivity:0/0                                                       \n          Retry:off   RTS thr:off   Fragment thr:off                            \n          Encryption key:off                                                    \n          Power Management:off                                                  \n          Link Quality=71/100  Signal level=-59 dBm  Noise level=0 dBm          \n          Rx invalid nwid:0  Rx invalid crypt:0  Rx invalid frag:0              \n          Tx excessive retries:0  Invalid misc:0   Missed beacon:0\n\nlo        no wireless extensions.\n\neth0      no wireless extensions.\n\n\n\n\n\n\n\nYou can also verify using ipv4 tables file which can be accessed using\n\n\nnano  /etc/iptables.ipv4.nat\n\n\n\n\n\n\n\nNow you have setup your AP and can connect devices to it.", 
            "title": "Home"
        }, 
        {
            "location": "/#vibe-as-an-access-point", 
            "text": "Connect VIBE2 to your PC client via ethernet interface.   Check whether eth0 (ethernet connection) is up or not using the command:    ifconfig\n\n  eth0      Link encap:Ethernet  HWaddr 1c:ba:8c:f1:a2:40                         \n            inet addr:192.168.1.151  Bcast:192.168.1.255  Mask:255.255.255.0      \n            inet6 addr: fe80::1eba:8cff:fef1:a240/64 Scope:Link                   \n            UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1                    \n            RX packets:2500 errors:0 dropped:180 overruns:0 frame:0               \n            TX packets:1049 errors:0 dropped:0 overruns:0 carrier:0               \n            collisions:0 txqueuelen:1000                                          \n            RX bytes:1494880 (1.4 MiB)  TX bytes:154334 (150.7 KiB)               \n            Interrupt:40    Now we will set our VIBE as an access point (AP).    Before that let us understand what AP needs to be capable of to be AP:   Inform devices about AP existence (Broadcast SSID) or at least allow         clients to connect.  Authenticate client.  Assign IP to the client devices.  Route packages to the \u201coutput\u201d network and the other way around.     In order to handle all these,VIBE needs the following tools   hostapd \u2013 Host AccessPoint Daemon   wpa-supplicant \u2013 tool responsible for WPA authorization  isc-dhcp-server   ip-tables      Let us now install these tools        sudo apt-get update\n\n      sudo apt-get -y install hostapd isc-dhcp-server iptables wpasupplicant   Now let us set the AP configuration by creating the file /etc/hostapd/hostapd.conf and adding the following content  interface=wlan0    #wlan0 will be working in AP mode\n ssid=Your_AP_SSID  #your AP SSID\n channel=1          #WiFi channel used by AP\n # WPA and WPA2 configuration\n macaddr_acl=0      #indicates that you do not use MAC address allow/deny list\n auth_algs=1        #indicates algorithm specified by IEEE 802.11\n ignore_broadcast_ssid=0 #AP will broadcast SSID\n\n #WPA settings\n wpa=2              #WPA algorithm used (WPA2 in this case)\n wpa_passphrase=my_secret_pass #AP password\n wpa_key_mgmt=WPA-PSK #WPA key mangement type\n wpa_pairwise=TKIP #encription algorithm\n rsn_pairwise=CCMP #encription algorithm\n\n #Hardware configuration\n driver=rtl871xdrv     #type of driver to be used (in may be different depending on your WiFi dongle chipset)\n                       #in majority of cases it will be driver=nl80211\n ieee80211n=1          #Whether IEEE 802.11n (HT) is enabled \n device_name=RTL8192CU #User-friendly description of device (optional)\n manufacturer=Realtek  #Manufacturer name (optional)\n hw_mode=g             #WPS RF Bands (a = 5G, b = 2.4G, g = 2.4G, ag = dual band)    Note:  If you are copying the above content ,don't forget to remove the comments from the file.    Now we need to set up /etc/hostapd/hostapd.conf as the configuration file. We do it in /etc/default/hostapd. Put the following line there:   DAEMON_CONF=\"/etc/hostapd/hostapd.conf\"    Now let\u2019s configure the network settings for clients connecting to AP. We do it in /etc/dhcp/dhcpd.conf    ddns-update-style none;   #DDNS disabled\n  default-lease-time 84600; #IP lease time valid for a day\n  max-lease-time 84600;     #IP lease time valid for a day\n  subnet 192.134.3.0 netmask 255.255.255.0 { #AP Subnet defintion\n  range 192.134.3.2 192.134.3.9  ;         #Range of IP addresses available for clients\n  option domain-name-servers 192.168.1.1 ; #your DNS IP (in my case, my router is workign as DNS)\n  option domain-name \"home\";     #optional domain name\n  option routers  192.134.3.1  ; #your client's gateway / router IP\n  }    Again we need to make sure that DHCP server uses this configuration. In /etc/default/isc-dhcp-server put the following lines:   DHCPD_CONF=\"/etc/dhcp/dhcpd.conf\"\n INTERFACES=\"wlan0\"    Now configure wlan0 for static IP adress (the same as router IP in dhcpd.conf file)    We do it in /etc/network/interfaces:   auto wlan0\n allow-hotplug wlan0\n iface wlan0 inet static\n      address 192.134.3.1\n      netmask 255.255.255.0\n up iptables-restore   /etc/iptables.ipv4.nat    The last line will set routing rules after restart.   Let\u2019s turn on packet forwarding in /etc/sysctl.conf by making sure that line   net.ipv4.ip_forward=1    is uncommented or added.   We will configure routing now by executing (assuming eth0 is your WAN interface): sudo iptables -t nat -A POSTROUTING -o eth0 -j MASQUERADE\n\nsudo iptables -A FORWARD -i eth0 -o wlan0 -m state --state RELATED,ESTABLISHED -j ACCEPT\n\nsudo iptables -A FORWARD -i wlan0 -o eth0 -j ACCEPT    and lets save these setting in a file:      sh -c \"iptables-save   /etc/iptables.ipv4.nat\"   If you are using RTL8188CUS chipset you had to replace original hostapd with the one prepared for this chipset.  wget \"http://raspberry-at-home.com/files/hostapd.gz\"\nsudo gzip -d hostapd.gz\nsudo chmod 755 hostapd\nsudo cp hostapd /usr/sbin/       To check the mode, you can use the command iwconfig  root@Yantrr:~# iwconfig                                                         \nwlan0     IEEE 802.11bgn  ESSID:\"VIBE2_AP\"  Nickname:\" WIFI@REALTEK \"           \n          Mode:Master  Frequency:2.412 GHz  Access Point: 00:1D:43:C0:0C:F0     \n          Sensitivity:0/0                                                       \n          Retry:off   RTS thr:off   Fragment thr:off                            \n          Encryption key:off                                                    \n          Power Management:off                                                  \n          Link Quality=71/100  Signal level=-59 dBm  Noise level=0 dBm          \n          Rx invalid nwid:0  Rx invalid crypt:0  Rx invalid frag:0              \n          Tx excessive retries:0  Invalid misc:0   Missed beacon:0\n\nlo        no wireless extensions.\n\neth0      no wireless extensions.    You can also verify using ipv4 tables file which can be accessed using  nano  /etc/iptables.ipv4.nat    Now you have setup your AP and can connect devices to it.", 
            "title": "VIBE as an Access Point"
        }
    ]
}